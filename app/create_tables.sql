drop database if exists LMS;
create database LMS;
use LMS;
CREATE TABLE ENGINEER
(
  engin_email VARCHAR(50) NOT NULL,
  engin_name VARCHAR(60) NOT NULL,
  trainer TINYINT(1) NOT NULL,
  CONSTRAINT ENGINEER_pk PRIMARY KEY (engin_email)
);

CREATE TABLE HR
(
  hr_email VARCHAR(50) NOT NULL,
  hr_name VARCHAR(60) NOT NULL,
  CONSTRAINT HR_pk PRIMARY KEY (hr_email)
);

CREATE TABLE COURSE
(
  Course_name VARCHAR(200) NOT NULL,
  Description VARCHAR(700) NOT NULL,
  Objectives VARCHAR(700) NOT NULL,
  Prereq_name VARCHAR(200),
  CONSTRAINT COURSE_pk PRIMARY KEY (Course_name),
  CONSTRAINT COURSE_fk1 FOREIGN KEY (Prereq_name) REFERENCES COURSE(Course_name)
);

CREATE TABLE CLASS
(
  CNo INT NOT NULL,
  Start_datetime TIMESTAMP NOT NULL,
  End_datetime TIMESTAMP NOT NULL,
  Capacity INT NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  engin_email VARCHAR(50) NOT NULL,
  CONSTRAINT CLASS_pk PRIMARY KEY (CNo, Course_name),
  CONSTRAINT CLASS_fk1 FOREIGN KEY (Course_name) REFERENCES COURSE(Course_name),
  CONSTRAINT CLASS_fk2 FOREIGN KEY (engin_email) REFERENCES ENGINEER(engin_email)
);

CREATE TABLE ENROLLMENT
(
  engin_email VARCHAR(50) NOT NULL,
  CNo INT NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  assigned TINYINT(1) NOT NULL,
  enrolled TINYINT(1) NOT NULL,
  completed INT NOT NULL,
  CONSTRAINT ENROLLMENT_pk PRIMARY KEY (engin_email, CNo, Course_name),
  CONSTRAINT ENROLLMENT_fk1 FOREIGN KEY (engin_email) REFERENCES ENGINEER(engin_email),
  CONSTRAINT ENROLLMENT_fk2 FOREIGN KEY (CNo, Course_name) REFERENCES CLASS(CNo, Course_name)
);

CREATE TABLE TRAIN
(
  engin_email VARCHAR(50) NOT NULL,
  CNo INT NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  CONSTRAINT TRAIN_pk PRIMARY KEY (engin_email, CNo, Course_name),
  CONSTRAINT TRAIN_fk1 FOREIGN KEY (engin_email) REFERENCES ENGINEER(engin_email),
  CONSTRAINT TRAIN_fk2 FOREIGN KEY (CNo, Course_name) REFERENCES CLASS(CNo, Course_name)
);


CREATE TABLE CHAPTER
(
  ChapterNo INT NOT NULL,
  Chapter_name VARCHAR(200) NOT NULL,
  CNo INT NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  CONSTRAINT CHAPTER_pk PRIMARY KEY (Chapter_name, CNo, Course_name),
  CONSTRAINT CHAPTER_fk1 FOREIGN KEY (CNo, Course_name) REFERENCES CLASS(CNo, Course_name)
);

CREATE TABLE COURSE_MATERIAL
(
  material_name VARCHAR(200) NOT NULL,
  content MEDIUMBLOB NOT NULL,
  material_id INT NOT NULL AUTO_INCREMENT,
  CNo INT NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  Chapter_num INT NOT NULL,
  file_extension VARCHAR(10) NOT NULL,
  CONSTRAINT COURSE_MATERIAL_pk PRIMARY KEY (material_id),
  CONSTRAINT COURSE_MATERIAL_fk1 FOREIGN KEY (CNo, Course_name) REFERENCES CLASS(CNo, Course_name)
);

CREATE TABLE QUIZ
(
  QuizID VARCHAR(50) NOT NULL,
  CNo INT NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  Chapter_name VARCHAR(200),
  Duration INT,
  Total_Questions INT,
  CONSTRAINT QUIZ_pk PRIMARY KEY (QuizID),
  CONSTRAINT QUIZ_fk1 FOREIGN KEY (CNo, Course_name) REFERENCES CLASS(CNo, Course_name),
  CONSTRAINT QUIZ_fk2 FOREIGN KEY (Chapter_name) REFERENCES CHAPTER(Chapter_name)
);


CREATE TABLE QUIZ_QUESTION
(
  Question VARCHAR(1000) NOT NULL,
  QuestionNo INT NOT NULL,
  Question_type ENUM('mcq', 't/f') NOT NULL,
  QuizID VARCHAR(50) NOT NULL,
  CONSTRAINT QUIZ_QUESTION_pk PRIMARY KEY (QuestionNo, QuizID),
  CONSTRAINT QUIZ_QUESTION_fk1 FOREIGN KEY (QuizID) REFERENCES QUIZ(QuizID)
);

CREATE TABLE QUIZ_RESULTS
(
  AttemptNo INT NOT NULL,
  Score INT NOT NULL,
  Outcome TINYINT(1) NOT NULL,
  engin_email VARCHAR(50) NOT NULL,
  QuizID VARCHAR(50) NOT NULL,
  Total_Questions INT NOT NULL,
  CONSTRAINT QUIZ_RESULTS_pk PRIMARY KEY (AttemptNo, engin_email, QuizID),
  CONSTRAINT QUIZ_RESULTS_fk1 FOREIGN KEY (engin_email) REFERENCES ENGINEER(engin_email),
  CONSTRAINT QUIZ_RESULTS_fk2 FOREIGN KEY (QuizID) REFERENCES QUIZ(QuizID)
);

CREATE TABLE CREATE_COURSE
(
  date_created DATE NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  hr_email VARCHAR(50) NOT NULL,
  CONSTRAINT CREATE_COURSE_pk PRIMARY KEY (Course_name, hr_email),
  CONSTRAINT CREATE_COURSE_fk1 FOREIGN KEY (Course_name) REFERENCES COURSE(Course_name),
  CONSTRAINT CREATE_COURSE_fk2 FOREIGN KEY (hr_email) REFERENCES HR(hr_email)
);

CREATE TABLE BADGE
(
  date_completed DATE NOT NULL,
  engin_email VARCHAR(50) NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  class_num INT NOT NULL,
  CONSTRAINT BADGE_pk PRIMARY KEY (engin_email, Course_name),
  CONSTRAINT BADGE_fk1 FOREIGN KEY (engin_email) REFERENCES ENGINEER(engin_email),
  CONSTRAINT BADGE_fk2 FOREIGN KEY (Course_name) REFERENCES COURSE(Course_name)
);

CREATE TABLE FORUMPOST
(
  Content VARCHAR(500) NOT NULL,
  QuestionCategory VARCHAR(100) NOT NULL,
  Topic VARCHAR(100) NOT NULL,
  Date_posted DATE NOT NULL,
  Resolved TINYINT(1) NOT NULL,
  Course_name VARCHAR(200) NOT NULL,
  engin_email VARCHAR(50) NOT NULL,
  CONSTRAINT FORUMPOST_pk PRIMARY KEY (Content, Course_name, engin_email),
  CONSTRAINT FORUMPOST_fk1 FOREIGN KEY (Course_name) REFERENCES COURSE(Course_name),
  CONSTRAINT FORUMPOST_fk2 FOREIGN KEY (engin_email) REFERENCES ENGINEER(engin_email)
);

CREATE TABLE QUIZ_OPTION
(
  OptionNo INT NOT NULL,
  Option_value VARCHAR(500) NOT NULL,
  QuizID VARCHAR(50) NOT NULL,
  QuestionNo INT NOT NULL,
  Selected TINYINT(1) NOT NULL,
  Answer TINYINT(1) NOT NULL,
  CONSTRAINT QUIZ_OPTION_pk PRIMARY KEY (OptionNo, QuizID, QuestionNo),
  CONSTRAINT QUIZ_OPTION_fk1 FOREIGN KEY (QuizID, QuestionNo) REFERENCES QUIZ_QUESTION(QuizID, QuestionNo)
);